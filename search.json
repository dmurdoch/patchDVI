[{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"The patchDVI package","text":"patchDVI package works Sweave (Leisch 2002), knitr (Xie 2013) R Markdown (Xie, Allaire, Grolemund 2018) document previewers facilitate editing: modifies links put output refer original source. also includes project management functions make large multi-file documents easier handle, can include source links (“concordances”) HTML output R Markdown. }","code":""},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"The patchDVI package","text":"implementations LaTeX allow source references emitted, previewers .dvi .pdf output file can link back original source line. feature yap previewer .dvi files MikTeX (Schenk 2010) many years. Support source references appeared recently .pdf output, first pdfsync. recently Synctex (Laurens 2008) links implemented pdflatex LaTeX processors. Unfortunately knitr/Sweave/R Markdown users, links point .tex source processed, true source code knitr/Sweave .Rnw R Markdown .Rmd input file. (refer .Rnw files.) Clicking “go source” previewer jump .tex file; changes made lost next time .Rnw input processed. wrote patchDVI package address problem. works follows. knitr/Sweave file processed option concordance=TRUE, knitr Sweave output record concordance lines input file output file. file processed LaTeX Pandoc, information embedded output. (Details embedding described sections Concordances Patching Synctex Files .) producing .dvi .pdf file, patchDVI function run read concordance information patch source reference information produced LaTeX. done, previewers see references original .Rnw source rather LaTeX intermediate file. 2022 addition follows similar process R Markdown files. case, output driver YAML header needs changed, example patchDVI::pdf_documentC. driver automates steps described . present time notable limitations R Markdown handling. described R Markdown Instructions. Besides technical details mentioned , paper describes history patchDVI Section patchDVI History section Project Management Functions project management functions. concludes short discussion.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"quick-start-instructions","dir":"Articles","previous_headings":"","what":"Quick Start Instructions","title":"The patchDVI package","text":"several ways make use patchDVI. section describes common ones Sweave/knitr. Section R Markdown Instructions deals R Markdown. cases package needs installed first; current release CRAN can installed using Source code maintained Github latest development version can installed using .Rnw files knitr Sweave, document also needs option set produce “concordances” (links .Rnw source .tex output knitr/Sweave). using knitr, include lines code chunk document: Sweave, put lines outside code chunk near start document: simplest way proceed within R. Assuming doc.Rnw knitr/Sweave document process current working directory, run runs doc.Rnw knitr/Sweave, runs chapters project knitr/Sweave, runs main .tex file (typically doc.tex, necessarily; see section Project Management Functions ) pdflatex, patches source links. produce DVI output instead PDF substitute knitDVI knitPDF, use latex dvipdfm produce PDF output, use knitDVIPDFM. using MikTeX Windows, functions knitPDFMiktex knitMiktex correspond first two respectively, use MikTeX-specific features. functions optional argument preview, can contain command line run .pdf .dvi previewer (filename replaced %s). .pdf previewer one can handle Synctex links; unfortunately, Acrobat Reader MacOS Preview deficient area. Windows, SumatraPDF works, built-previewers TeXShop TeXworks MacOS X platforms. MikTeX includes yap previewer .dvi files; knitMiktex command sets default. Another way proceed directly within text editor. instructions depend editor; included Appendices: TeXShop Using patchDVI TeXShop, WinEdt Using patchDVI WinEdt, TeXworks Using patchDVI TeXworks. editors (e.g. TeXShop TeXworks) include previewer can handle source links. Finally, may want run knitr command line, outside R. line (obvious variants replacements knitPDF) :","code":"install.packages(\"patchDVI\") remotes::install_github(\"dmurdoch/patchDVI\", dependencies = TRUE) opts_knit$set(concordance = TRUE) \\usepackage{Sweave} \\SweaveOpts{concordance=TRUE} library(patchDVI) knitPDF(\"doc.Rnw\") library(patchDVI) SweavePDF(\"doc.Rnw\") Rscript -e 'patchDVI::knitPDF(\"doc.Rnw\")'"},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"r-markdown-instructions","dir":"Articles","previous_headings":"","what":"R Markdown Instructions","title":"The patchDVI package","text":"recent addition patchDVI support R Markdown input. R Markdown (Allaire et al. 2022) become popular recent years, .Rmd input nowadays exceeding popularity Sweave-style .Rnw input. general structure file contains ``YAML header’’ giving configuration information, followed mix text Markdown dialect code R another language. use patchDVI R Markdown, currently need development version. may installed using version installed, change output setting YAML. pdf_document, use instead. html_document, use necessary enable concordances carry necessary patching. Almost options original drivers supported replacements, plus . See help pages details. One possible snag R Markdown conversions rely Pandoc. processing document within RStudio, RStudio make sure Pandoc found, working another environment, make sure R can find . One way add Pandoc directory PATH; another make link Pandoc directory already PATH. also possible use analogs SweavePDF/knitPDF family functions; ones intended Markdown source renderMiktex, renderPDFMiktex, renderDVI, renderPDF, renderDVIPDFM renderAll.","code":"remotes::install_github(\"dmurdoch/patchDVI\", dependencies = TRUE) output: patchDVI::pdf_documentC output RmdConcord::html_documentC"},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"known-limitations-of-markdown-support","dir":"Articles","previous_headings":"R Markdown Instructions","what":"Known limitations of Markdown support","title":"The patchDVI package","text":"Markdown support relies relatively recent addition Pandoc, sourcepos extension. present (Pandoc 2.19.2 included RStudio), extension works Commonmark reader, whereas default, Pandoc uses dialect Markdown. enable concordances, patchDVI switches Pandoc input setting commonmark_x+sourcepos. Unfortunately, commonmark_x reader doesn’t support extensions standard markdown reader supports. page: https://github.com/jgm/pandoc/wiki/Roadmap list current status. definitions extensions, see Pandoc documentation https://pandoc.org/MANUAL.html. particular note lack citations raw_tex. Citations Markdown source like [@Author] currently processed Commonmark, though support planned future time. Raw LaTeX need “fenced”, e.g. entered (\\pagebreak \\newpage macros receive special treatment, don’t need fencing long separated blank lines text .) “roadmap” indicates raw LaTeX never supported Commonmark, incompatible.","code":"```{=latex} LaTeX ```"},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"patchdvi-history","dir":"Articles","previous_headings":"","what":"patchDVI History","title":"The patchDVI package","text":"Initially patchDVI worked .dvi files (hence name). required changes Sweave function R, first appeared around release R version 2.5.0. incompatible changes R version 2.8.0 .pdf support added patchDVI. Using patchDVI requires pre-processing step (knitr/Sweave), LaTeX processing, post-processing step (patching). usually followed preview resulting output file. quickly became apparent convenient package steps single R function, user needed make single call. details LaTeX processing vary platform platform, wrote functions SweaveMiktex SweavePDFMiktex specific MikTex platform, intention adding others used users told needed adding. never happened, meantime, Brian Ripley made tools::texi2dvi() function R much flexible, version 1.7 patchDVI included modified version hope patchDVI nearly platform neutral. 1.7 release motivated attempt support TeXworks (Kew 2008), cross-platform LaTeX targetted editor. TeXworks still early days (working version 0.2 Windows), enough flexibility handle large knitr/Sweave projects, example, chapter book requires separate knitr/Sweave processing, LaTeX processes main wrapper file. prompted include make-style capabilities patchDVI. now possible specify list knitr/Sweave input files process (optionally changed since last processing) main wrapper file, within code chunks single file, using knitAll()/SweaveAll() functions. SweaveDVIPDFM() function followed later. English language processing, find pdflatex convenient processor, work well languages like Japanese. visit Institute Statistical Mathematics Tokyo learned issues, help Prof. H. Okumura Junji Nakano worked SweaveDVIPDFM() handle two step conversion PDF. 2015 added support non-Sweave processors, knitr, 2020 improved documentation knitr users. recent addition support R Markdown 2022.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"concordances","dir":"Articles","previous_headings":"","what":"Concordances","title":"The patchDVI package","text":"knitr/Sweave processes code chunks .Rnw file, replacing requested output command. means output .tex file alternates copied LaTeX source newly produced blocks output. line .tex file can thus mapped one lines input, concordance .","code":""},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"technical-description-of-concordance-records","dir":"Articles","previous_headings":"Concordances","what":"Technical description of concordance records","title":"The patchDVI package","text":"concordance records text records following format. four parts, separated colons: label concordance indicate type record. output .tex filename. input .Rnw filename. input line numbers corresponding output line. third component compressed using simple encoding: first number first line number; remainder line numbers run-length encoding differences. Thus input file shown : output file shown , concordance shown second column. concordance recorded file sample-concordance.tex numeric part file may interpreted shown : format concordance records used R Markdown, output format HTML, target file skipped wrapped HTML comment instead, e.g.","code":"\\Sconcordance{concordance:sample.tex:sample.Rnw:% 1 1 1 1 2 7 0 1 2} <!-- concordance::sample.Rnw:1 1 1 1 2 7 0 1 2 -->"},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"patching--dvi-files","dir":"Articles","previous_headings":"Concordances","what":"Patching .dvi Files","title":"The patchDVI package","text":"\\Sconcordance macro expands \\special macro producing .dvi file. included verbatim .dvi file. concordance: prefix identifies patchDVI concordance. patchDVI() function scans whole file finds sort record. (may one, multiple files make document.) Source references also recorded LaTeX \\special records; prefix src:. patchDVI() function reads src: special refers file concordance: special, makes substitution. end, rewrites whole .dvi file.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"patching--synctex-files","dir":"Articles","previous_headings":"Concordances","what":"Patching .synctex Files","title":"The patchDVI package","text":"using pdflatex, \\Sconcordance macro expands \\pdfobj macro containing concordance, eventually embedded .pdf file. However, Synctex scheme source references write references .pdf file directly. Instead, written separate file extension .synctex, compressed version file, extension .synctex.gz. patchSynctex() function reads concordances either .pdf file (pdflatex used) .dvi file, source references Synctex file. rewrites Synctex file makes changes.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"patching--html-files","dir":"Articles","previous_headings":"Concordances","what":"Patching .html Files","title":"The patchDVI package","text":"R Markdown HTML target, concordances embedded Pandoc span div markup, e.g. driver reads data-pos attributes, works corresponding line true source file, rewrites concordances using concordance record comment described end Section Technical description concordance records. Currently aware one use values: HTML Tidy checks done R 4.3.x report original source lines .Rmd file. become aware uses records, seems likely format need change.","code":"<span data-pos=\"sample.knit.md@13:1-13:5\">This<\/span>"},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"project-management-functions","dir":"Articles","previous_headings":"","what":"Project Management Functions","title":"The patchDVI package","text":"mentioned , number steps involved running patchDVI complex knitr/Sweave project: Run knitr/Sweave input file. Run LaTeX main wrapper file. Run appropriate patchDVI() function output file. Preview print result. Moreover, step 1 needs repeated .Rnw file, content changed since last run, steps need done . manage complication, patchDVI package includes simple project management functions, knitAll(), renderAll() SweaveAll(). really function different defaults, described terms SweaveAll(). function runs Sweave multiple files determines name main wrapper file. used internally functions described Complete Process , can also called directly user. works. SweaveAll() takes vector filenames input, runs Sweave . run, examines global environment four variables .PostSweaveHook, .SweaveFiles, .SweaveMake .TexRoot. (first three variables can instead named .PostKnitHook, .knitFiles, .knitMake. versions present, choice undefined, don’t .) code chunk .Rnw file may produce function (name function; match.fun() used look ) named .PostSweaveHook. present, function taking single argument. Immediately running Sweave, SweaveAll() call function, passing name .tex output file argument. hook can required postprocessing, example, remove local pathnames output strings. optional parameter PostSweaveHook SweaveAll() function can provide default hook function. Hooks specified using .PostSweaveHook variable take precedence given input file. SweaveAll() also use character variable named .SweaveFiles. contain names .Rnw files project. corresponding .tex file exists, .Rnw file newer, run Sweave. may turn name additional .Rnw files process; file processed , even named several times. optional parameter named make SweaveAll() function. make == 1 (default), things proceed described . make == 0, .SweaveFiles variable ignored, explicitly named files call SweaveAll() processed. make == 2, files processed, whether newer .tex file . .SweaveMake variable override value make. .Rnw file may also set value .TexRoot name .tex file. , file passed LaTeX processing. none given, first file call SweaveAll() assumed root file. (multiple different .TexRoot variables specified different .Rnw files, one used, hard predict : don’t .) Whichever file determined root file name returned SweaveAll() call. SweaveAll() called functions described Complete Process step 1 patchDVI steps. workflow designed follows. .Rnw chapter (named example chapter.Rnw) large project specify .TexRoot, e.g. using code chunk Similarly, wrapper file (named example wrapper.Rnw) .Rnw file sets .SweaveFiles complete list files project. one can build initial copy entire document calling knitPDF, SweavePDF, renderPDF, knitMiktex, SweaveMiktex, renderMiktex, knitDVI, SweaveDVI, renderDVI, knitDVIPDFM, SweaveDVIPDFM, renderDVIPDFM argument \"wrapper.Rnw\". Later, one working chapter.Rnw, one can call one functions argument \"chapter.Rnw\" chapter processed full sequence, without running knitr/Sweave/R Markdown chapters. complicated schemes possible. example: chapter can subsections separate files; chapter name subsections, main wrapper need name chapters can assume chapter edited changed. one wants make full project every time, include \"wrapper.Rnw\" .SweaveFiles chapter.","code":"<<echo=FALSE>>=  .TexRoot <- \"wrapper.tex\"  @"},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"the-complete-process","dir":"Articles","previous_headings":"Project Management Functions","what":"The Complete Process","title":"The patchDVI package","text":"patchDVI package contains five functions knitr, R Markdown Sweave designed run four steps listed start section. functions named style: Stage1Stage2, Stage1 one knit, render, Sweave, Stage2 one DVI, Miktex, PDF, PDFMiktex, dvipdfm. full list given near end introduction Section Project Management Functions. Stage1 parts specify initial processor knitr::knit, Sweave, rmarkdown::render. Stage2 part specifies resulting .tex files processed: knitDVI knitMiktex related functions produce .dvi files general case MikTeX respectively; knitPDF knitPDFMiktex friends direct .pdf output pdflatex. Finally, knitDVIPDFM related functions run two-step conversion using first latex dvipdfm. case, LaTeX processing functions customizable. example, years ago text editor allowed call external functions arguments depending name current file line number within . call Windows batch file line set argument %1 filename set argument %2; batch file invoked R using command line (one long line). passed current file SweaveMiktex(), set preview command use yap options -1 update current view (rather opening new window), jump line corresponding editor line. code \"\\x25s\" simply \"%s\" encoded without explicit percent sign, misinterpreted Windows command processor. patchDVI calls previewer, main .dvi filename substituted %s.","code":"echo patchDVI::SweaveMiktex('%2',     preview='yap -1 -s\"%1%2\" \"\\x25s\"')     | Rterm --slave"},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"installing-or-loading-packages","dir":"Articles","previous_headings":"Project Management Functions","what":"Installing or Loading Packages","title":"The patchDVI package","text":"complex project, often number different packages required. updating R, may end tedious exercise make sure installed updated. needsPackages() function helps . takes character vector naming packages used current document. default, installs already installed. Optionally, can update using update.packages(), load , attach search list. example, document uses packages patchDVI , near start ensure available, wasn’t nonsensical statement. (able run patchDVI wasn’t already installed?)","code":"patchDVI::needsPackages(\"patchDVI\")"},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"The patchDVI package","text":"described vignette, patchDVI package convenient way work knitr/Sweave modern setting, allowing fast switching source input preview. also offers features make management larger projects easier. possibilities may exist make use code package. order read patch .dvi, .pdf .synctex files, patchDVI includes code work formats. Users may find imaginative uses capability, ’ve tried leave general form. low-level .dvi editing done C functions called R, PDF related work done pure R code.","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"using-patchdvi-with-texshop","dir":"Articles","previous_headings":"Appendices","what":"Using patchDVI with TeXShop","title":"The patchDVI package","text":"TeXShop nice LaTeX editor MacOS. Dave Gabrielson University Manitoba helped work instructions. updated December, 2013 TeXShop 2.47. Preferences -- Typesetting -- Sync Method, choose SyncTeX. use Sweave, create file called Library/TeXShop/Engines/Sweave.engine home directory containing lines . Give executable permissions. Replace <locale> locale string, e.g. en_CA.UTF-8 Canadian English using UTF-8 encoding. locale line can omitted use plain ASCII characters, probably necessary cases. use knitr, create file called Library/TeXShop/Engines/knitr.engine home directory containing lines , give executable permissions. Replace <locale> locale string, e.g. en_CA.UTF-8 Canadian English using UTF-8 encoding. locale line can omitted use plain ASCII characters, probably necessary cases. use R Markdown, create file called Library/TeXShop/Engines/markdown.engine home directory, give executable permissions. Replace <locale> locale string, e.g. en_CA.UTF-8 Canadian English using UTF-8 encoding. locale line can omitted use plain ASCII characters, probably necessary cases. vignette engines, use weave argument , appropriate. Install patchDVI package R. editing .Rnw file TeXShop, choose knitr Sweave engine menu; .Rmd files, use markdown engine. multiple files project, main file must .Rnw file (e.g. Main.Rnw) lists .Rnw files .SweaveFiles variable, need add line subordinate file. 6. Sweave, add \\SweaveOpts{concordance=TRUE} line document. knitr, add code chunk similar : somewhere near start document. TeXShop previewer supports SyncTeX; right click preview, choose Sync menu jump source location.","code":"#!/bin/bash export LC_ALL=<locale> Rscript -e \"patchDVI::SweavePDF('$1')\" #!/bin/bash export LC_ALL=<locale> Rscript -e \"patchDVI::knitPDF('$1',\\     envir = globalenv())\" #!/bin/bash export LC_ALL=<locale> Rscript -e \"patchDVI::renderPDF('$1',\\   envir = globalenv())\" %!TEX root = Main.Rnw <<results='asis'>>=  patchDVI::useknitr()  @"},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"using-patchdvi-with-texworks","dir":"Articles","previous_headings":"Appendices","what":"Using patchDVI with TeXworks","title":"The patchDVI package","text":"TeXworks editor multiple platforms, somewhat similar TeXShop. instructions tested version 0.4.5, MikTeX 2.9 Windows, version 0.6.8 MacOS. NB: versions TeXworks bug setting HOME directory user. versions, R find locally installed copy patchDVI. work around bug, set R_USER environment variable Windows home directory, e.g. R_USER=C:/Users/Murdoch. TeXworks can work patchDVI project management features using script tell process current file knitr/Sweave, preview main file. See instructions current best attempt script. can also use TeXShop approach specifying TEX root file .Rnw file. instructions given first Sweave, knitr. -e patchDVI::SweavePDF('$fullname') Install patchDVI package R. Tell TeXworks open Sweave files editing file pattern configuration file texworks-config.txt. file found via Help | Settings Resources... | Resources menu entry. line : editing .Rnw file TeXworks, choose SweavePDF engine menu. Add \\SweaveOpts{concordance=TRUE} line document. using project management features patchDVI editing subordinate file, TeXworks open update PDF preview processes changes. four workarounds . simplest manually open .pdf file first time. updated automatically. Unfortunately, happen editing main file, .pdf opened automatically, updates won’t happen later edit subordinate file. next simplest TeXShop approach: include line near top file, make sure Main.Rnw refers subordinate Sweave files. use TeXworks knitr, instructions similar , two changes. step 1, replace second line command (SweavePDF() call) following longer command, one line: step 5, insert following code chunk file: use TeXworks R Markdown, make changes: step 1, replace second line command (SweavePDF() call) following:","code":"file-open-filter:   TeX documents (*.Rnw *.Rmd *.tex) %!TEX root = Main.Rnw patchDVI::knitPDF('$fullname', envir = globalenv()) <<results='asis'>>=  patchDVI::useknitr()  @ patchDVI::renderPDF('$fullname', envir = globalenv(), output_format = \"patchDVI::pdf_documentC\")"},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"using-patchdvi-with-winedt","dir":"Articles","previous_headings":"Appendices","what":"Using patchDVI with WinEdt","title":"The patchDVI package","text":"WinEdt Windows editor LaTeX support. configuration options changed number times; know implement instructions latest version. instructions apply version 5.5, assume using MikTeX. Options -- Execution Modes choose Texify, click Browse Executable. Find Rscript executable R installation, directory bin/i386 bin/x64, choose . Switches line, put Parameters line, put quotes necessary! 2. PDF Texify command, replacing SweaveMiktex SweavePDFMiktex. 3. Options -- Execution modes, make sure Start Viewer Forward Search selected LaTeX PDF LaTeX. preview file yap, double clicking jump back editor. doesn’t (opens wrong editor), ’re yap choose View -- Options -- Inverse DVI search. see WinEdt (auto-detected) option; , select . , create new entry WinEdt, command line, put editing path necessary.","code":"-e \"patchDVI::SweaveMiktex('%n%t', '%N.tex')\" \"path\\to\\winedt.exe\" \"[Open(|%f|);SelPar(%l,8)]\""},{"path":"https://dmurdoch.github.io/patchDVI/articles/patchDVI.html","id":"using-patchdvi-with-rstudio","dir":"Articles","previous_headings":"Appendices","what":"Using patchDVI with RStudio","title":"The patchDVI package","text":"RStudio nice front end working R individual .Rnw Markdown files. using , ’m going assume ’re using knitr well, instructions worked combination. RStudio less flexible editors specifying customized processing file, instructions worked assuming already configured knitr. probably possible something similar Sweave; just haven’t tried. need set individual chapter files TeXShop/TeXworks, .e. comment top . tells RStudio run knitr main file click Compile PDF. (also work use knitr style files won’t work TeXShop/TeXworks.) main file, need code chunk containing line set .SweaveFiles variable naming chapter files (main file), running knitInRStudio(): safe put lines file even sometimes process different way: RStudio, knitInRStudio() nothing. One remaining issue approach won’t see knitr progress messages knitting chapter files. want see messages, add chunk option childOutput = TRUE code chunk holding code.","code":"%!TEX root = Main.Rnw %!RNW root = Main.Rnw .SweaveFiles <- c(\"a.Rnw\", \"b.Rnw\") patchDVI::knitInRStudio()"},{"path":[]},{"path":"https://dmurdoch.github.io/patchDVI/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Duncan Murdoch. Author, maintainer.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Murdoch D (2024). patchDVI: Package Patch '.dvi' '.synctex' Files. R package version 1.11.3, https://github.com/dmurdoch/patchDVI.","code":"@Manual{,   title = {patchDVI: Package to Patch '.dvi' or '.synctex' Files},   author = {Duncan Murdoch},   year = {2024},   note = {R package version 1.11.3},   url = {https://github.com/dmurdoch/patchDVI}, }"},{"path":"https://dmurdoch.github.io/patchDVI/index.html","id":"patchdvi","dir":"","previous_headings":"","what":"Package to Patch .dvi or .synctex Files","title":"Package to Patch .dvi or .synctex Files","text":"main goal patchDVI support previewer forward reverse search Sweave, knitr R Markdown source .dvi, .pdf .html output. also contains project management functions, make convenient build large documents multiple source files, supports editing Sweave, knitr R Markdown source TeXworks, TeXShop editors. project originally hosted R-forge; see https://r-forge.r-project.org/projects/sweavesearch/ older versions.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Package to Patch .dvi or .synctex Files","text":"version patchDVI optionally makes use RmdConcord, package support concordances R Markdown documents. can install development version GitHub : CRAN version installed ","code":"# install.packages(\"devtools\") devtools::install_github(\"dmurdoch/patchDVI\", dependencies = TRUE) install.packages(\"patchDVI\", dependencies = TRUE)"},{"path":"https://dmurdoch.github.io/patchDVI/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Package to Patch .dvi or .synctex Files","text":"See patchDVI vignette usage details.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/DVIspecials.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set DVI specials — DVIspecials","title":"Get and set DVI specials — DVIspecials","text":"functions get set \\specials values .dvi files.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/DVIspecials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set DVI specials — DVIspecials","text":"","code":"DVIspecials(f) setDVIspecials(f, newspecials, newname=f)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/DVIspecials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set DVI specials — DVIspecials","text":"f character filename .dvi file patch newspecials character vector new specials put file newname name file write","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/DVIspecials.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get and set DVI specials — DVIspecials","text":"entry newspecials vector NA, special removed.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/DVIspecials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and set DVI specials — DVIspecials","text":"DVIspecials returns specials file character vector. setDVIspecials called side effect patching .dvi file; returns NULL invisibly.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/DVIspecials.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get and set DVI specials — DVIspecials","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/patchDVI/reference/DVIspecials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and set DVI specials — DVIspecials","text":"","code":"if (FALSE) { # \\dontrun{ x <- DVIspecials(\"test.dvi\") x[1] <- \"new value\" setDVIspecials(\"test.dvi\", x) } # }"},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Sweave to a collection of files. — SweaveAll","title":"Apply Sweave to a collection of files. — SweaveAll","text":"function allows master Sweave input file specify files project.  modified files run Sweave.  Following run, several post-processing steps may performed.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Sweave to a collection of files. — SweaveAll","text":"","code":"SweaveAll(SweaveFiles, make = 1, PostSweaveHook = NULL,           force = TRUE, verbose = FALSE,           weave = utils::Sweave, ...) knitAll(RnwFiles, make = 1, PostKnitHook = NULL,           force = TRUE, verbose = FALSE,           weave = knitr::knit, ...) renderAll(RmdFiles = NULL, make = 1, PostKnitHook = NULL,           force = TRUE, verbose = FALSE,           weave = rmarkdown::render, ...)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Sweave to a collection of files. — SweaveAll","text":"SweaveFiles, RnwFiles, RmdFiles character vector naming files   run weave. make integer indicating files run weave .  See . PostSweaveHook, PostKnitHook default hook called weave call.  See . force TRUE, files SweaveFiles run,   otherwise newer corresponding .tex file. verbose Mainly debugging:  print progress messages. weave function used converting source .tex. called weave(filename, ...) file SweaveFiles files identified needing weaving. ... Extra parameters pass weave.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveAll.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Sweave to a collection of files. — SweaveAll","text":"function runs weave repeatedly. starts checking global variable .SweaveFiles, augments SweaveFiles argument unprocessed files list.  runs weave file listed SweaveFiles. run, removes global variables .PostSweaveHook, .SweaveFiles, .TexRoot.  individual Sweave files may set variables control post- processing described . Following run, SweaveAll checks whether code chunks created variable .PostSweaveHook global environment.  present, function (name function; match.fun used lookup) taking single argument.  present, PostSweaveHook (PostKnitHook) argument used default.  SweaveAll pass name .tex output file function, can required postprocessing.  example, used remove local pathnames output strings. SweaveAll checks .SweaveFiles, present character vector filenames.  collected, Sweave runs specified SweaveFiles, make parameter controls files run.  default value 1 works follows:  new files added via .SweaveFiles already processed checked. newer corresponding .tex file, .tex file exist, processed.  may also return new filenames global .SweaveFiles variable processed well. Setting make = 2 forces mentioned files processed. make = 0, original vector files passed SweaveAll processed. SweaveAll also checks global variable named .TexRoot. present, placed first position result vector. (already vector, later copies removed.)","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveAll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Sweave to a collection of files. — SweaveAll","text":"names files produced.  first element Sweavefiles produce first element result .TexRoot specified; elements depend files processed.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveAll.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply Sweave to a collection of files. — SweaveAll","text":"Duncan Murdoch","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveAll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Sweave to a collection of files. — SweaveAll","text":"","code":"if (FALSE) { # \\dontrun{ # Run Sweave on a main file, and obtain other files from there. SweaveAll(\"main.Rnw\")  # Run knitr on the same file. SweaveAll(\"main.Rnw\", weave = knitr::knit) } # }"},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveMiktex.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Sweave and Patch — SweaveMiktex","title":"Run Sweave and Patch — SweaveMiktex","text":"simple script run Sweave, convert LaTeX file, patch .","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveMiktex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Sweave and Patch — SweaveMiktex","text":"","code":"SweaveMiktex(Rnw, main,     cmd = \"texify\",     options = \"--tex-option=-src-specials --tex-option=-interaction=nonstopmode\",     includedir = \"--tex-option=--include-directory=\",     stylepath = FALSE,     source.code = NULL,     make = 1,     preview = 'yap \"%s\"',     patchLog=TRUE,     sleep = 0, ...)  SweavePDFMiktex(Rnw, main,     cmd = \"texify --pdf\",     options = \"--tex-option=-synctex=-1 --tex-option=-interaction=nonstopmode\",     includedir = \"--tex-option=-include-directory=\",     stylepath = FALSE,     source.code = NULL,     make = 1,     preview = NULL,     patchLog = TRUE,     sleep = 0, ...)  SweaveDVI(Rnw, main,     texinputs = NULL,     source.code = NULL,     make = 1,     links = NULL,     preview = NULL,     patchLog = TRUE, ...)  SweavePDF(Rnw, main,     texinputs = NULL,     source.code = NULL,     make = 1,     links = NULL,     preview = NULL,     patchLog = TRUE, ...)  SweaveDVIPDFM(Rnw, main,     latex = \"latex\", latexOpts = \"-synctex=1 -interaction=nonstopmode\",     dvipdfm = \"dvipdfm\", dvipdfmOpts = \"\",     texinputs = NULL,     source.code = NULL,     make = 1,     preview = NULL,     patchLog = TRUE, ...)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveMiktex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Sweave and Patch — SweaveMiktex","text":"Rnw .Rnw input file main .tex file run latex, defaulting output file Sweave cmd LaTeX command run options Options pass LaTeX includedir prefix option give location Sweave.sty stylepath stylepath argument pass Sweave source.code NULL, filename source running Sweave make Value pass SweaveAll control Sweave files processed preview Command use preview result, NULL preview patchLog Whether attempt patch console log .log file sleep Number seconds sleep error detected run texinputs Extra paths pass texi2dvi links NULL, option turn production source links       via Synctex source specials latex,latexOpts function call convert .tex .dvi,       options put command line. dvipdfm, dvipdfmOpts function call convert .dvi .pdf,       options put command line. ... Additional options pass SweaveAll","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveMiktex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Sweave and Patch — SweaveMiktex","text":"Rnw argument filename ending .tex, weaving skipped, .dvi file still patched (one files project might come Sweave). source.code argument may used temporarily install code running document weaver (e.g. Sweave). install experimental version Sweave, set variables used code chunks, etc.  (Note things sourced locally, whereas Sweave runs things global environment, file need make explicit assignments , avoid using names clash argument names SweaveMiktex SweavePDFMiktex.) functions invoke Latex differently.  SweaveMiktex designed call Miktex's texify command produce .dvi file.  SweavePDFMiktex , produces .pdf.  SweaveDVI SweavePDF similar, use modified version R's texi2dvi function invoke Latex. SweaveDVIPDFM conversion .pdf two stages. patchLog option makes use new patchLog function.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveMiktex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Sweave and Patch — SweaveMiktex","text":"functions run side effects.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveMiktex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Sweave and Patch — SweaveMiktex","text":"","code":"if (FALSE) { # \\dontrun{ SweaveMiktex(\"chapter.Rnw\", \"book.tex\") } # }"},{"path":"https://dmurdoch.github.io/patchDVI/reference/defSconcordance.html","id":null,"dir":"Reference","previous_headings":"","what":"Support for non-Sweave concordances. — defSconcordance","title":"Support for non-Sweave concordances. — defSconcordance","text":"Sweave automatically inserts concordances output file, embedded .dvi .pdf output using LaTeX macro \\Sconcordance Sweave.sty style file. vignette processing engines (e.g. knitr) use Sweave.sty, defSconcordance defines macro explicitly. useknitr function specific knitr documents. writeMacro TRUE, calls defSconcordance write macro definition output file.  writeMacro specified, guesses value looking \\begin{document} somewhere first 100 lines file. always writes \\input line concordances file.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/defSconcordance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Support for non-Sweave concordances. — defSconcordance","text":"","code":"defSconcordance() useknitr(writeMacro)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/defSconcordance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Support for non-Sweave concordances. — defSconcordance","text":"writeMacro logical; whether call defSconcordance","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/defSconcordance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Support for non-Sweave concordances. — defSconcordance","text":"function necessary using Sweave, vignette engines. knitr, concordances written file name typically form basename-concordance.tex, input file basename.Rnw.  insert code like document use Sweave.sty style, included another larger document, use defSconcorance:  can forced calling patchDVI::useknitr(writeMacro = FALSE).","code":"<<results=\"asis\">>= patchDVI::useknitr() @"},{"path":"https://dmurdoch.github.io/patchDVI/reference/defSconcordance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Support for non-Sweave concordances. — defSconcordance","text":"functions called side effect writing LaTeX code.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/defSconcordance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Support for non-Sweave concordances. — defSconcordance","text":"Duncan Murdoch","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/defSconcordance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Support for non-Sweave concordances. — defSconcordance","text":"","code":"defSconcordance() #>  #> \\newcommand{\\Sconcordance}[1]{% #>   \\ifx\\pdfoutput\\undefined% #>   \\csname newcount\\endcsname\\pdfoutput\\fi% #>   \\ifcase\\pdfoutput\\special{#1}% #>   \\else% #>    \\begingroup% #>      \\pdfcompresslevel=0% #>      \\immediate\\pdfobj stream{#1}% #>      \\pdfcatalog{/SweaveConcordance \\the\\pdflastobj\\space 0 R}% #>    \\endgroup% #>   \\fi}"},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitInRStudio.html","id":null,"dir":"Reference","previous_headings":"","what":"Trigger processing of chapter files from RStudio. — knitInRStudio","title":"Trigger processing of chapter files from RStudio. — knitInRStudio","text":"function executed within RStudio, knit child main file large .Rnw-style knitr document.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitInRStudio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trigger processing of chapter files from RStudio. — knitInRStudio","text":"","code":"knitInRStudio(SweaveFiles, force = FALSE, verbose = FALSE)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitInRStudio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trigger processing of chapter files from RStudio. — knitInRStudio","text":"SweaveFiles files process.  missing, value set .SweaveFiles variable global environment. force TRUE, files knitted; otherwise, newer corresponding .tex file. verbose Add debugging information output.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitInRStudio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trigger processing of chapter files from RStudio. — knitInRStudio","text":"nothing run within RStudio.  run , starts second R process knitting.  assumed call exist code chunk another knitr document. Set childOutput = TRUE options code chunk containing wish see output child knitr runs log main one.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitInRStudio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trigger processing of chapter files from RStudio. — knitInRStudio","text":"concatenated output child knitting, possibly verbose output.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitInRStudio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trigger processing of chapter files from RStudio. — knitInRStudio","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitPDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Knit a File and Patch — knitPDF","title":"Knit a File and Patch — knitPDF","text":"simple script run knit, LaTeX, patchDVI.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitPDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Knit a File and Patch — knitPDF","text":"","code":"knitMiktex(Rnw, main,     weave = knitr::knit,     ...)  knitPDFMiktex(Rnw, main,     weave = knitr::knit,     ...)  knitDVI(Rnw, main,     weave = knitr::knit,     ...)  knitPDF(Rnw, main,     weave = knitr::knit,     ...)  knitDVIPDFM(Rnw, main,     weave = knitr::knit,     ...)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitPDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Knit a File and Patch — knitPDF","text":"Rnw .Rnw input file main .tex file run latex, defaulting output file Sweave weave function carry weaving. ... See Details .","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitPDF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Knit a File and Patch — knitPDF","text":"... arguments passed corresponding Sweave* function. Rnw argument filename ending .tex, knitting skipped, output file still patched (one files project might come knitr).","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitPDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Knit a File and Patch — knitPDF","text":"functions run side effects.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitPDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Knit a File and Patch — knitPDF","text":"","code":"if (FALSE) { # \\dontrun{ knitPDF(\"chapter.Rnw\", \"book.tex\") } # }"},{"path":"https://dmurdoch.github.io/patchDVI/reference/needsPackages.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for and optionally install packages used by document. — needsPackages","title":"Check for and optionally install packages used by document. — needsPackages","text":"function checks needed packages","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/needsPackages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for and optionally install packages used by document. — needsPackages","text":"","code":"needsPackages(pkgs, install = TRUE,                      update = FALSE,                      load = FALSE,                      attach = FALSE)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/needsPackages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for and optionally install packages used by document. — needsPackages","text":"pkgs list names packages check. install Whether install missing packages. update Whether update packages can updated. load Whether load namespaces packages. attach Whether run library calls.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/needsPackages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for and optionally install packages used by document. — needsPackages","text":"boolean arguments can vector length pkgs, applying separately entry.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/needsPackages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for and optionally install packages used by document. — needsPackages","text":"Called side effects.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/needsPackages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for and optionally install packages used by document. — needsPackages","text":"","code":"# This shouldn't do anything, as patchDVI must already be # installed! needsPackages(\"patchDVI\")"},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":null,"dir":"Reference","previous_headings":"","what":"patch Sweave source references into .dvi file — patchDVI","title":"patch Sweave source references into .dvi file — patchDVI","text":"package allows source references .dvi files refer actual source file, rather intermediate .tex file.  Dvi previewers yap xdvi can make use source references jump directly part document corresponding particular source line, previewer can send messages editors jump source corresponding location preview.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"patch Sweave source references into .dvi file — patchDVI","text":"","code":"patchDVI(f, newname = f, patchLog = TRUE) patchSynctex(f, newname=f, uncompress=\"pdftk %s output %s uncompress\",        fromDVI = NULL, patchLog = TRUE)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"patch Sweave source references into .dvi file — patchDVI","text":"f character value giving name .dvi .synctex file patch newname Output go file; default overwrite original patchLog Whether attempt patch .log file uncompress External command uncompress compressed PDF file fromDVI Name DVI file find concordance","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"patch Sweave source references into .dvi file — patchDVI","text":"function works Sweave option concordance=TRUE related functions. Using patchDVI requires change usual Sweave workflow, follows: 1.  Write source file .Rnw.  Include option enable patching. 2.  Use Sweave convert file .tex format. 3.  Use latex process .tex file .dvi file .pdf file. 4.  Run patchDVI .dvi file .synctex file patch Rnw links. 5.  Use previewer patched .dvi file original .pdf file. information needed patching stored .dvi file, 5 steps can run command line, need keep R session running (though work within one session well).  distant date future maybe previewers learn read concordance info, step 4 longer necessary. patchLog option makes use new patchLog function.","code":"\\SweaveOpts{concordance=TRUE}"},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"patch Sweave source references into .dvi file — patchDVI","text":".dvi file, concordance stored TeX \"special\" following format (version 0.5): concordance:<oldname>:<newname>:<firstline> <rle pairs>*.  <oldname> name .tex file replace, <newname> name .Rnw file substitute , <firstline> line number .Rnw file first line .tex file. <rle pairs> sequence pairs (length, value), separated spaces (parentheses), length indicating number repetitions value.  Using inverse.rle converted sequence differences line numbers concordance. Since colons used delimit elements, must used <oldname> <newname>:  names like C:/source.Rnw work. example, concordance might contain saying source references optimization.tex replaced optimization.Rnw.  Line 1 .tex file corresponds line 1 .Rnw file. diffs successive lines 1 1 4 4 1 <repeated 39 times> 4 ..., corresponding lines .Rnw file (including first) 1 2 3 7 11 12 13 .... format used stream object .pdf file. (Version 2.12.2 earlier R used different format actually invalid according PDF specification.)  always successfully read patching code, versions pdflatex compress parts file, patchDVI currently read compressed parts files.  suggest installing pdftk open source PDF toolkit (available https://www.pdflabs.com/tools/pdftk--pdf-toolkit/) decompress file; patchSynctex make use found.  uncompress argument can modified call different uncompress utility.  Latex commands \\pdfcompresslevel=0\\pdfobjcompresslevel=0 start document instruct pdflatex compress file, Latex packages (e.g. beamer) override settings. workflow involves using latex dvipdfm, need recent enough version latex supports -synctex=1 option, can specify name .dvi file fromDVI argument. format subject change future R releases.","code":"\\Sconcordance{\\concordance:optimization.tex:optimization.Rnw:1 2 1 2 4 39 1 1 4 ...}"},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"patch Sweave source references into .dvi file — patchDVI","text":"string containing message done.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"patch Sweave source references into .dvi file — patchDVI","text":"yap previewer part MikTeX, www.miktex.org.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"patch Sweave source references into .dvi file — patchDVI","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"patch Sweave source references into .dvi file — patchDVI","text":"","code":"if (FALSE) { # \\dontrun{ patchDVI(\"mypaper.dvi\") } # }"},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Patch a LaTeX log file. — patchLog","title":"Patch a LaTeX log file. — patchLog","text":"function parses standard LaTeX log file applies patches based Sweave concordance, error messages warnings refer .Rnw file rather .tex file.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Patch a LaTeX log file. — patchLog","text":"","code":"patchLog(f, newname = f, concords = NULL, max_print_line = 79, Cstyle = FALSE)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Patch a LaTeX log file. — patchLog","text":"f filename log file. newname filename write patched file . concords Concordances read .dvi .pdf.  NULL, attempt made read source. max_print_line line length latex compiler wrap error messages. Cstyle TRUE, look C-style error messages \"filename:num: msg\". FALSE, look classic messages \"! msg\".  NA, look , pick popular style.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchLog.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Patch a LaTeX log file. — patchLog","text":"parsing based log parser written Jonathan Kew, Stefan Löffler, Antonio Macrì, Henrik Skov Midtiby TeXWorks.  parser assumes error lines reported standard format; C style errors currently supported.  patchLog can detect C style errors, standard format assumed default, preferred.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchLog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Patch a LaTeX log file. — patchLog","text":"function called mainly side effect writing new log file.  returns concords object invisibly.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchLog.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Patch a LaTeX log file. — patchLog","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/patchDVI/reference/pdf_documentC.html","id":null,"dir":"Reference","previous_headings":"","what":"R Markdown driver to add concordance — pdf_documentC","title":"R Markdown driver to add concordance — pdf_documentC","text":"pdf_documentC driver replaces like-named rmarkdown driver one outputs Commonmark rather Pandoc Markdown. Commonmark dialect Markdown Pandoc driver Commonmark supports output source position information. using function output driver, can get documents.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/pdf_documentC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R Markdown driver to add concordance — pdf_documentC","text":"","code":"pdf_documentC(latex_engine = \"pdflatex\",            sourcepos = TRUE,            defineSconcordance = TRUE,            run_latex = TRUE, ...)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/pdf_documentC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R Markdown driver to add concordance — pdf_documentC","text":"latex_engine Command convert .tex file .pdf. sourcepos Whether include source position information. defineSconcordance TRUE, insert definition \\Sconcordance macro just \\begin{document}. run_latex Whether run latex_engine produce PDF. ... arguments pass base driver.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/pdf_documentC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R Markdown driver to add concordance — pdf_documentC","text":"driver modifies standard rmarkdown driver pdf_document use Commonmark add concordances. latex_formatC driver requires currently unreleased version commonmark package, version higher 1.9.0.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/pdf_documentC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R Markdown driver to add concordance — pdf_documentC","text":"R Markdown output format object add concordance information.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/pdf_documentC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"R Markdown driver to add concordance — pdf_documentC","text":"Duncan Murdoch","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/pdf_with_patches.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an R Markdown pdf driver to one that handles concordances. — pdf_with_patches","title":"Convert an R Markdown pdf driver to one that handles concordances. — pdf_with_patches","text":"function produces new driver matches old one respects, adds argument sourcepos (possibly others). argument TRUE (default) concordances handled new driver. used produce pdf_documentC package, also work drivers produce PDF output using Pandoc.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/pdf_with_patches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an R Markdown pdf driver to one that handles concordances. — pdf_with_patches","text":"","code":"pdf_with_patches(driver)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/pdf_with_patches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an R Markdown pdf driver to one that handles concordances. — pdf_with_patches","text":"driver R Markdown driver produces HTML, LaTeX PDF using Pandoc.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/pdf_with_patches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an R Markdown pdf driver to one that handles concordances. — pdf_with_patches","text":"new driver function.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/pdf_with_patches.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert an R Markdown pdf driver to one that handles concordances. — pdf_with_patches","text":"function makes use RmdConcord::pdf_with_concordance function.  function adds concordances output original driver; function patches PDF file source references refer original source file.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/pdf_with_patches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an R Markdown pdf driver to one that handles concordances. — pdf_with_patches","text":"","code":"pdf_with_patches(rmarkdown::latex_fragment) #> Loading required namespace: RmdConcord #> function (latex_engine = \"pdflatex\", sourcepos = TRUE, defineSconcordance = TRUE,  #>     run_latex = TRUE, ...)  #> { #>     force(run_latex) #>     res <- driver(latex_engine = latex_engine, sourcepos = sourcepos,  #>         ...) #>     res <- apply_patches(res, sourcepos, defineSconcordance,  #>         run_latex) #> } #> <bytecode: 0x564eb18988b8> #> <environment: 0x564eb1897a48>"},{"path":"https://dmurdoch.github.io/patchDVI/reference/readDVI.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo function to read a .dvi file — readDVI","title":"Demo function to read a .dvi file — readDVI","text":"R function reads .dvi file (prototype DVIspecials).  Modify see parts .dvi.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/readDVI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo function to read a .dvi file — readDVI","text":"","code":"readDVI(f, show=c(\"bop\", \"special\", \"fntdef\", \"preamble\"))"},{"path":"https://dmurdoch.github.io/patchDVI/reference/readDVI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Demo function to read a .dvi file — readDVI","text":"f filename show type records print","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/readDVI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Demo function to read a .dvi file — readDVI","text":"readDVI prints reads, return anything useful.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/renderPDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Render R Markdown and Patch — renderPDF","title":"Render R Markdown and Patch — renderPDF","text":"simple scripts render, run LaTeX, patch.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/renderPDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render R Markdown and Patch — renderPDF","text":"","code":"renderMiktex(Rmd, main,     weave = rmarkdown::render,     ...)  renderPDFMiktex(Rmd, main,     weave = rmarkdown::render,     ...)  renderDVI(Rmd, main,     weave = rmarkdown::render,     ...)  renderPDF(Rmd, main,     weave = rmarkdown::render,     ...)  renderDVIPDFM(Rmd, main,     weave = rmarkdown::render,     ...)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/renderPDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render R Markdown and Patch — renderPDF","text":"Rmd .Rmd input file main .tex file run latex, defaulting output file Sweave weave function carry weaving. ... See Details .","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/renderPDF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Render R Markdown and Patch — renderPDF","text":"... arguments passed corresponding Sweave* function. Rmd argument filename ending .tex, knitting skipped, output file still patched (one files project might come R Markdown).","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/renderPDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render R Markdown and Patch — renderPDF","text":"functions run side effects.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/renderPDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render R Markdown and Patch — renderPDF","text":"","code":"if (FALSE) { # \\dontrun{ renderPDF(\"chapter.Rnw\", \"book.tex\") } # }"},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-01-to-04","dir":"Changelog","previous_headings":"","what":"patchDVI 0.1 to 0.4","title":"patchDVI 0.1 to 0.4","text":"Quick initial releases.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-05","dir":"Changelog","previous_headings":"","what":"patchDVI 0.5","title":"patchDVI 0.5","text":"Fixes bug handling named chunks. Changes (shrinks) format inserted special.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-06","dir":"Changelog","previous_headings":"","what":"patchDVI 0.6","title":"patchDVI 0.6","text":"Removed concordance patching, avoid Miktex bug.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-07","dir":"Changelog","previous_headings":"","what":"patchDVI 0.7","title":"patchDVI 0.7","text":"Removed limitation changing size special.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-08","dir":"Changelog","previous_headings":"","what":"patchDVI 0.8","title":"patchDVI 0.8","text":"Allowed specials removed setting value NA setDVIspecials.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-09","dir":"Changelog","previous_headings":"","what":"patchDVI 0.9","title":"patchDVI 0.9","text":"Add expand=FALSE option.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-10","dir":"Changelog","previous_headings":"","what":"patchDVI 1.0","title":"patchDVI 1.0","text":"Move Sweave() changes R-devel, delete patchDVI","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-11","dir":"Changelog","previous_headings":"","what":"patchDVI 1.1","title":"patchDVI 1.1","text":"Allow run pdflatex (just set include directory)","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-12","dir":"Changelog","previous_headings":"","what":"patchDVI 1.2","title":"patchDVI 1.2","text":"Case-insensitive filename matching. ChangeLog renamed NEWS. Updated memory management 2.6.x scheme.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-13","dir":"Changelog","previous_headings":"","what":"patchDVI 1.3","title":"patchDVI 1.3","text":"Use texify instead latex/pdflatex SweaveMiktex()/SweavePDFMiktex() Use normalizePath() path comparisons reliable.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-14","dir":"Changelog","previous_headings":"","what":"patchDVI 1.4","title":"patchDVI 1.4","text":"Add experimental patching SyncTex output. Allow options specified command line.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-15","dir":"Changelog","previous_headings":"","what":"patchDVI 1.5","title":"patchDVI 1.5","text":"Add stylepath ... args SweaveMiktex() flexibility. Add BugReports field DESCRIPTION.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-16","dir":"Changelog","previous_headings":"","what":"patchDVI 1.6","title":"patchDVI 1.6","text":"Add source.code arg SweaveMiktex() SweavePDFMiktex() allow experimental versions Sweave() used.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-17","dir":"Changelog","previous_headings":"","what":"patchDVI 1.7","title":"patchDVI 1.7","text":"Add SweaveAll(), SweavePDF(), SweaveDVI(), well handling .PostSweaveHook, .SweaveFiles .TexRoot (see SweaveAll()). Added modified version tools::texi2dvi(). Added vignette. Added preview option Sweave* functions. Fixed bugs patchDVI: message printed, missed .tex files included \\input{filename}.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-181583","dir":"Changelog","previous_headings":"","what":"patchDVI 1.8.1583","title":"patchDVI 1.8.1583","text":"Made attempt handle compressed PDF files using pdftk uncompress . Fixed bug concordance inclusion PDF files Sweave(); adapted code handle (R > 2.12.2). Added grepConcords() method (using new grepRaw() function). Texworks Windows needs Unix line endings Synctex file; now produce platforms. Fixed crash file concordance. Missing .tex files built SweaveAll(). Updated handle new concordance format R-devel (2.14.0--). Added .SweaveMake variable override make arg SweaveAll().","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-181584","dir":"Changelog","previous_headings":"","what":"patchDVI 1.8.1584","title":"patchDVI 1.8.1584","text":"SweavePDF() SweaveDVI(), wrapped texi2dvi() call try() case bad return status.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-181585","dir":"Changelog","previous_headings":"","what":"patchDVI 1.8.1585","title":"patchDVI 1.8.1585","text":"Added quick start instructions, editor instructions.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-19","dir":"Changelog","previous_headings":"","what":"patchDVI 1.9","title":"patchDVI 1.9","text":"CRAN release: 2013-01-10 Cleaned CRAN release.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-191594","dir":"Changelog","previous_headings":"","what":"patchDVI 1.9.1594","title":"patchDVI 1.9.1594","text":"Added SweaveDVIPDFM() allow users use latex/dvipdfm rather pdflatex. Updated TeXShop TeXWorks instructions. Added vignette Japanese language work. Added patchLog() function patch messages log files. Added patchLog option Sweave* functions call patchLog(). Added sleep parameter Miktex Sweave* functions.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-191616","dir":"Changelog","previous_headings":"","what":"patchDVI 1.9.1616","title":"patchDVI 1.9.1616","text":"CRAN release: 2015-06-09 Modified SweaveAll() patchSynctex() allow non-Sweave vignette support (aimed knitr). Added useknitr() defSconcordance() functions aim. Improved Japanese language support, updated Japanese.Rnw vignette help Prof. Haruhiko Okumura.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-191619","dir":"Changelog","previous_headings":"","what":"patchDVI 1.9.1619","title":"patchDVI 1.9.1619","text":"Imported file_test() avoid warning. Quotes DESCRIPTION. Better error message building Japanese vignette.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-191620","dir":"Changelog","previous_headings":"","what":"patchDVI 1.9.1620","title":"patchDVI 1.9.1620","text":"SweaveAll() now force = TRUE argument, allow staleness checking beginning. also verbose = FALSE argument debugging.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-191621","dir":"Changelog","previous_headings":"","what":"patchDVI 1.9.1621","title":"patchDVI 1.9.1621","text":"Added support RStudio, including knitInRStudio().","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-1101","dir":"Changelog","previous_headings":"","what":"patchDVI 1.10.1","title":"patchDVI 1.10.1","text":"CRAN release: 2020-05-08 Added needsPackages() function.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-1110","dir":"Changelog","previous_headings":"","what":"patchDVI 1.11.0","title":"patchDVI 1.11.0","text":"CRAN release: 2023-03-14 Added support R Markdown sources using R Markdown output driver pdf_documentC() new RmdConcord package. Moved source Github, added website https://dmurdoch.github.io/patchDVI/ .","code":""},{"path":"https://dmurdoch.github.io/patchDVI/news/index.html","id":"patchdvi-1113","dir":"Changelog","previous_headings":"","what":"patchDVI 1.11.3","title":"patchDVI 1.11.3","text":"Modified code work strict R headers. Cleaned error handling case LaTeX issues (particularly missing Japanese support).","code":""}]
