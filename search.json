[{"path":"https://dmurdoch.github.io/patchDVI/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Duncan Murdoch. Maintainer.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Murdoch D (2022). patchDVI: Package Patch '.dvi' '.synctex' Files. R package version 1.10.1, https://dmurdoch.github.io/patchDVI/.","code":"@Manual{,   title = {patchDVI: Package to Patch '.dvi' or '.synctex' Files},   author = {Duncan Murdoch},   year = {2022},   note = {R package version 1.10.1},   url = {https://dmurdoch.github.io/patchDVI/}, }"},{"path":"https://dmurdoch.github.io/patchDVI/index.html","id":"patchdvi","dir":"","previous_headings":"","what":"Package to Patch .dvi or .synctex Files","title":"Package to Patch .dvi or .synctex Files","text":"goal patchDVI support previewer forward reverse search Sweave, knitr R Markdown source .dvi, .pdf .html output. project originally hosted R-forge; see https://r-forge.r-project.org/projects/sweavesearch/ older history.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/DVIspecials.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set DVI specials — DVIspecials","title":"Get and set DVI specials — DVIspecials","text":"functions get set \\specials values .dvi files.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/DVIspecials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set DVI specials — DVIspecials","text":"","code":"DVIspecials(f) setDVIspecials(f, newspecials, newname=f)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/DVIspecials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set DVI specials — DVIspecials","text":"f character filename .dvi file patch newspecials character vector new specials put file newname name file write","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/DVIspecials.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get and set DVI specials — DVIspecials","text":"entry newspecials vector NA, special removed.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/DVIspecials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and set DVI specials — DVIspecials","text":"DVIspecials returns specials file character vector. setDVIspecials called side effect patching .dvi file; returns NULL invisibly.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/DVIspecials.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get and set DVI specials — DVIspecials","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/patchDVI/reference/DVIspecials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and set DVI specials — DVIspecials","text":"","code":"if (FALSE) { x <- DVIspecials(\"test.dvi\") x[1] <- \"new value\" setDVIspecials(\"test.dvi\", x) }"},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Sweave to a collection of files. — SweaveAll","title":"Apply Sweave to a collection of files. — SweaveAll","text":"function allows master Sweave input file specify files  project.  modified files run Sweave.  Following run, several post-processing steps may performed.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Sweave to a collection of files. — SweaveAll","text":"","code":"SweaveAll(SweaveFiles, make = 1, PostSweaveHook = NULL,            force = TRUE, verbose = FALSE,            weave = utils::Sweave, ...) knitAll(RnwFiles, make = 1, PostKnitHook = NULL,            force = TRUE, verbose = FALSE,            weave = knitr::knit, ...)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Sweave to a collection of files. — SweaveAll","text":"SweaveFiles, RnwFiles character vector naming files    run weave. make integer indicating files run weave .  See . PostSweaveHook, PostKnitHook default hook called weave call.  See . force TRUE, files SweaveFiles run,   otherwise newer corresponding .tex file. verbose Mainly debugging:  print progress messages. weave function used converting source .tex. called weave(filename, ...) file  SweaveFiles files identified needing weaving. ... Extra parameters pass weave.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveAll.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Sweave to a collection of files. — SweaveAll","text":"function runs weave repeatedly. starts  checking global variable .SweaveFiles,  augments SweaveFiles argument unprocessed files list.  runs weave file listed SweaveFiles. run, removes global variables .PostSweaveHook, .SweaveFiles, .TexRoot.  individual Sweave files may set variables control post- processing described . Following run, SweaveAll checks whether code chunks created variable .PostSweaveHook global environment.  present, function (name function; match.fun used lookup) taking single argument.  present, PostSweaveHook (PostKnitHook) argument used default.  SweaveAll pass name .tex output file function, can required postprocessing.  example, used remove local pathnames output strings. SweaveAll checks .SweaveFiles, present character vector filenames.  collected, Sweave runs specified SweaveFiles, make parameter controls files run.  default value 1 works follows:  new files added via .SweaveFiles already processed checked. newer corresponding .tex file, .tex file exist, processed.  may also return new filenames global .SweaveFiles variable processed well. Setting make = 2 forces mentioned files processed. make = 0, original vector files passed SweaveAll processed. SweaveAll also checks global variable named .TexRoot. present, placed first position result vector. (already vector, later copies removed.)","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveAll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Sweave to a collection of files. — SweaveAll","text":"names files produced.  first element Sweavefiles produce first element result .TexRoot specified; elements depend files processed.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveAll.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply Sweave to a collection of files. — SweaveAll","text":"Duncan Murdoch","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveAll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Sweave to a collection of files. — SweaveAll","text":"","code":"if (FALSE) { # Run Sweave on a main file, and obtain other files from there. SweaveAll(\"main.Rnw\")  # Run knitr on the same file. SweaveAll(\"main.Rnw\", weave = knitr::knit) }"},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveMiktex.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple function to run MikTeX — SweaveMiktex","title":"Simple function to run MikTeX — SweaveMiktex","text":"simple script run Sweave, MikTeX, patchDVI.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveMiktex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple function to run MikTeX — SweaveMiktex","text":"","code":"SweaveMiktex(Rnw, main,      cmd = \"texify\",     options = \"--tex-option=-src-specials --tex-option=-interaction=nonstopmode\",     includedir = \"--tex-option=--include-directory=\",     stylepath = FALSE,      source.code = NULL,      make = 1,      preview = 'yap \"%s\"',      patchLog=TRUE,     sleep = 0, ...)        SweavePDFMiktex(Rnw, main,       cmd = \"texify --pdf\",      options = \"--tex-option=-synctex=-1 --tex-option=-interaction=nonstopmode\",     includedir = \"--tex-option=-include-directory=\",     stylepath = FALSE,      source.code = NULL,      make = 1,      preview = NULL,      patchLog = TRUE,      sleep = 0, ...)        SweaveDVI(Rnw, main,      texinputs = NULL,      source.code = NULL,      make = 1,      links = NULL,     preview = NULL,      patchLog = TRUE, ...)  SweavePDF(Rnw, main,      texinputs = NULL,      source.code = NULL,      make = 1,      links = NULL,     preview = NULL,      patchLog = TRUE, ...)      SweaveDVIPDFM(Rnw, main,      latex = \"latex\", latexOpts = \"-synctex=1 -interaction=nonstopmode\",      dvipdfm = \"dvipdfm\", dvipdfmOpts = \"\",      texinputs = NULL,      source.code = NULL,      make = 1,      preview = NULL,      patchLog = TRUE, ...)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveMiktex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple function to run MikTeX — SweaveMiktex","text":"Rnw .Rnw input file main .tex file run latex, defaulting output file Sweave cmd LaTeX command run options Options pass LaTeX includedir prefix option give location Sweave.sty stylepath stylepath argument pass Sweave source.code NULL, filename source running Sweave make Value pass SweaveAll control Sweave files processed preview Command use preview result, NULL preview patchLog Whether attempt patch console log .log file sleep Number seconds sleep error detected run texinputs Extra paths pass texi2dvi links NULL, option turn production source links       via Synctex source specials latex,latexOpts function call convert .tex .dvi,       options put command line. dvipdfm, dvipdfmOpts function call convert .dvi .pdf,       options put command line. ... Additional options pass SweaveAll","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveMiktex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simple function to run MikTeX — SweaveMiktex","text":"Rnw argument filename ending .tex,  weaving skipped, .dvi file still patched (one files project might come Sweave). source.code argument may used temporarily install code running document weaver (e.g. Sweave).   install experimental version Sweave, set variables  used code chunks, etc.  (Note things sourced locally, whereas Sweave runs things global environment,  file need make explicit assignments , avoid using names clash argument names SweaveMiktex SweavePDFMiktex.) functions invoke Latex differently.  SweaveMiktex designed call Miktex's texify command produce .dvi file.  SweavePDFMiktex , produces .pdf.  SweaveDVI SweavePDF similar, use modified version R's texi2dvi  function invoke Latex. SweaveDVIPDFM conversion  .pdf two stages. patchLog option makes use new patchLog function.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveMiktex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple function to run MikTeX — SweaveMiktex","text":"functions run side effects.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/SweaveMiktex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple function to run MikTeX — SweaveMiktex","text":"","code":"if (FALSE) { SweaveMiktex(\"chapter.Rnw\", \"book.tex\") }"},{"path":"https://dmurdoch.github.io/patchDVI/reference/defSconcordance.html","id":null,"dir":"Reference","previous_headings":"","what":"Support for non-Sweave concordances. — defSconcordance","title":"Support for non-Sweave concordances. — defSconcordance","text":"Sweave automatically inserts concordances output file, embedded .dvi .pdf output using LaTeX macro \\Sconcordance Sweave.sty style file. vignette processing engines (e.g. knitr)  use Sweave.sty, defSconcordance defines macro explicitly. useknitr function specific knitr documents. writeMacro TRUE, calls defSconcordance write macro definition output file.  writeMacro specified, guesses value looking  \\begin{document} somewhere first 100 lines  file.   always writes \\input line concordances file.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/defSconcordance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Support for non-Sweave concordances. — defSconcordance","text":"","code":"defSconcordance() useknitr(writeMacro)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/defSconcordance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Support for non-Sweave concordances. — defSconcordance","text":"writeMacro logical; whether call defSconcordance","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/defSconcordance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Support for non-Sweave concordances. — defSconcordance","text":"function necessary using Sweave, vignette engines. knitr, concordances written file name typically form basename-concordance.tex, input file basename.Rnw.  insert code like document use Sweave.sty style, included another larger document,  use defSconcorance:  can forced calling patchDVI::useknitr(writeMacro = FALSE).","code":"<<results=\"asis\">>= patchDVI::useknitr() @"},{"path":"https://dmurdoch.github.io/patchDVI/reference/defSconcordance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Support for non-Sweave concordances. — defSconcordance","text":"functions called side effect writing LaTeX code.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/defSconcordance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Support for non-Sweave concordances. — defSconcordance","text":"Duncan Murdoch","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/defSconcordance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Support for non-Sweave concordances. — defSconcordance","text":"","code":"defSconcordance() #>  #> \\newcommand{\\Sconcordance}[1]{% #>   \\ifx\\pdfoutput\\undefined% #>   \\csname newcount\\endcsname\\pdfoutput\\fi% #>   \\ifcase\\pdfoutput\\special{#1}% #>   \\else% #>    \\begingroup% #>      \\pdfcompresslevel=0% #>      \\immediate\\pdfobj stream{#1}% #>      \\pdfcatalog{/SweaveConcordance \\the\\pdflastobj\\space 0 R}% #>    \\endgroup% #>   \\fi}"},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitInRStudio.html","id":null,"dir":"Reference","previous_headings":"","what":"Trigger processing of chapter files from RStudio. — knitInRStudio","title":"Trigger processing of chapter files from RStudio. — knitInRStudio","text":"function executed within RStudio,  knit child  main file  large .Rnw-style knitr document.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitInRStudio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trigger processing of chapter files from RStudio. — knitInRStudio","text":"","code":"knitInRStudio(SweaveFiles, force = FALSE, verbose = FALSE)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitInRStudio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trigger processing of chapter files from RStudio. — knitInRStudio","text":"SweaveFiles files process.  missing, value set .SweaveFiles variable global environment. force TRUE, files knitted; otherwise, newer corresponding .tex file. verbose Add debugging information output.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitInRStudio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trigger processing of chapter files from RStudio. — knitInRStudio","text":"nothing run within RStudio.  run , starts second R process knitting.   assumed call exist code chunk another knitr document. Set childOutput = TRUE options code chunk containing wish see output child knitr runs log main one.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitInRStudio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trigger processing of chapter files from RStudio. — knitInRStudio","text":"concatenated output child knitting, possibly verbose output.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitInRStudio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trigger processing of chapter files from RStudio. — knitInRStudio","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitPDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple functions to knit a file and run it through LaTeX — knitPDF","title":"Simple functions to knit a file and run it through LaTeX — knitPDF","text":"simple script run knit, LaTeX, patchDVI.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitPDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple functions to knit a file and run it through LaTeX — knitPDF","text":"","code":"knitMiktex(Rnw, main,      cmd = \"texify\",     options = \"--tex-option=-src-specials --tex-option=-interaction=nonstopmode\",     includedir = \"--tex-option=--include-directory=\",     stylepath = FALSE,      source.code = NULL,      make = 1,      preview = 'yap \"%s\"',      patchLog=TRUE,     sleep = 0,      weave = knitr::knit,     ...)        knitPDFMiktex(Rnw, main,       cmd = \"texify --pdf\",      options = \"--tex-option=-synctex=-1 --tex-option=-interaction=nonstopmode\",     includedir = \"--tex-option=-include-directory=\",     stylepath = FALSE,      source.code = NULL,      make = 1,      preview = NULL,      patchLog = TRUE,      sleep = 0,      weave = knitr::knit,     ...)        knitDVI(Rnw, main,      texinputs = NULL,      source.code = NULL,      make = 1,      links = NULL,     preview = NULL,      patchLog = TRUE,      weave = knitr::knit,     ...)  knitPDF(Rnw, main,      texinputs = NULL,      source.code = NULL,      make = 1,      links = NULL,     preview = NULL,      patchLog = TRUE,      weave = knitr::knit,      ...)      knitDVIPDFM(Rnw, main,      latex = \"latex\", latexOpts = \"-synctex=1 -interaction=nonstopmode\",      dvipdfm = \"dvipdfm\", dvipdfmOpts = \"\",      texinputs = NULL,      source.code = NULL,      make = 1,      preview = NULL,      patchLog = TRUE,      weave = knitr::knit,     ...)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitPDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple functions to knit a file and run it through LaTeX — knitPDF","text":"Rnw .Rnw input file main .tex file run latex, defaulting output file Sweave cmd LaTeX command run options Options pass LaTeX includedir prefix option give location Sweave.sty stylepath stylepath argument pass Sweave source.code NULL, filename source running Sweave make Value pass SweaveAll control Sweave files processed preview Command use preview result, NULL preview patchLog Whether attempt patch console log .log file sleep Number seconds sleep error detected run texinputs Extra paths pass texi2dvi links NULL, option turn production source links       via Synctex source specials latex,latexOpts function call convert .tex .dvi,       options put command line. dvipdfm, dvipdfmOpts function call convert .dvi .pdf,       options put command line. weave function carry weaving. ... Additional options pass SweaveAll","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitPDF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simple functions to knit a file and run it through LaTeX — knitPDF","text":"Rnw argument filename ending .tex,  knitting skipped, output file still patched (one files project might come knitr). source.code argument may used temporarily install code running document weaver (e.g. knit).   install experimental version knit, set variables  used code chunks, etc. functions invoke Latex differently.  knitMiktex designed call Miktex's texify command produce .dvi file.  knitPDFMiktex , produces .pdf.  knitDVI knitPDF similar, use modified version R's texi2dvi  function invoke Latex. knitDVIPDFM conversion  .pdf two stages. patchLog option makes use patchLog function.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitPDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple functions to knit a file and run it through LaTeX — knitPDF","text":"functions run side effects.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/knitPDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple functions to knit a file and run it through LaTeX — knitPDF","text":"","code":"if (FALSE) { knitPDF(\"chapter.Rnw\", \"book.tex\") }"},{"path":"https://dmurdoch.github.io/patchDVI/reference/needsPackages.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for and optionally install packages used by document. — needsPackages","title":"Check for and optionally install packages used by document. — needsPackages","text":"function checks needed packages","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/needsPackages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for and optionally install packages used by document. — needsPackages","text":"","code":"needsPackages(pkgs, install = TRUE,                      update = FALSE,                      load = FALSE,                      attach = FALSE)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/needsPackages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for and optionally install packages used by document. — needsPackages","text":"pkgs list names packages check. install Whether install missing packages. update Whether update packages can updated. load Whether load namespaces packages. attach Whether run library calls.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/needsPackages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for and optionally install packages used by document. — needsPackages","text":"boolean arguments can vector length pkgs, applying separately entry.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/needsPackages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for and optionally install packages used by document. — needsPackages","text":"Called side effects.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/needsPackages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for and optionally install packages used by document. — needsPackages","text":"","code":"# This shouldn't do anything, as patchDVI must already be # installed! needsPackages(\"patchDVI\")"},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":null,"dir":"Reference","previous_headings":"","what":"patch Sweave source references into .dvi file — patchDVI","title":"patch Sweave source references into .dvi file — patchDVI","text":"package allows source references .dvi files refer actual source file, rather intermediate .tex file.  Dvi previewers yap xdvi can make use source references jump directly part document corresponding particular source line, previewer can send messages editors jump source corresponding location preview.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"patch Sweave source references into .dvi file — patchDVI","text":"","code":"patchDVI(f, newname = f, patchLog = TRUE) patchSynctex(f, newname=f, uncompress=\"pdftk %s output %s uncompress\",        fromDVI = NULL, patchLog = TRUE)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"patch Sweave source references into .dvi file — patchDVI","text":"f character value giving name .dvi .synctex file patch newname Output go file; default overwrite original patchLog Whether attempt patch .log file uncompress External command uncompress compressed PDF file fromDVI Name DVI file find concordance","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"patch Sweave source references into .dvi file — patchDVI","text":"function works Sweave option concordance=TRUE related functions. Using patchDVI requires change usual Sweave workflow, follows: 1.  Write source file .Rnw.  Include option enable patching. 2.  Use Sweave convert file .tex format. 3.  Use latex process .tex file .dvi file .pdf file. 4.  Run patchDVI .dvi file .synctex file patch Rnw links. 5.  Use previewer patched .dvi file original .pdf file. information needed patching stored .dvi file, 5 steps can run command line, need keep R session running (though work within one session well).  distant date future maybe previewers learn read concordance info, step 4 longer necessary. patchLog option makes use new patchLog function.","code":"\\SweaveOpts{concordance=TRUE}"},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"patch Sweave source references into .dvi file — patchDVI","text":".dvi file, concordance stored TeX \"special\" following format (version 0.5): concordance:<oldname>:<newname>:<firstline> <rle pairs>*.  <oldname> name .tex file replace, <newname> name .Rnw file substitute , <firstline> line number .Rnw file first line .tex file. <rle pairs> sequence pairs (length, value), separated spaces (parentheses), length indicating number repetitions value.  Using inverse.rle converted sequence differences line numbers concordance. Since colons used delimit elements, must used <oldname> <newname>:  names like C:/source.Rnw work. example, concordance might contain saying source references optimization.tex replaced optimization.Rnw.  Line 1 .tex file corresponds line 1 .Rnw file. diffs successive lines 1 1 4 4 1 <repeated 39 times> 4 ..., corresponding lines .Rnw file (including first) 1 2 3 7 11 12 13 .... format used stream object .pdf file. (Version 2.12.2 earlier R used different format actually invalid according PDF specification.)  always successfully read patching code, versions pdflatex compress parts file, patchDVI currently read compressed parts files.  suggest installing pdftk open source PDF toolkit (available https://www.pdflabs.com/tools/pdftk--pdf-toolkit/) decompress file; patchSynctex make use found.  uncompress argument can modified call different uncompress utility.  Latex commands \\pdfcompresslevel=0\\pdfobjcompresslevel=0 start document instruct pdflatex compress file, Latex packages (e.g. beamer) override settings. workflow involves using latex dvipdfm, need recent enough version latex supports -synctex=1 option, can specify name .dvi file fromDVI argument. format subject change future R releases.","code":"\\Sconcordance{\\concordance:optimization.tex:optimization.Rnw:1 2 1 2 4 39 1 1 4 ...}"},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"patch Sweave source references into .dvi file — patchDVI","text":"string containing message done.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"patch Sweave source references into .dvi file — patchDVI","text":"yap previewer part MikTeX, www.miktex.org.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"patch Sweave source references into .dvi file — patchDVI","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchDVI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"patch Sweave source references into .dvi file — patchDVI","text":"","code":"if (FALSE) { patchDVI(\"mypaper.dvi\") }"},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Patch a LaTeX log file. — patchLog","title":"Patch a LaTeX log file. — patchLog","text":"function parses standard LaTeX log file applies patches based Sweave concordance, error messages warnings refer .Rnw file rather .tex file.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Patch a LaTeX log file. — patchLog","text":"","code":"patchLog(f, newname = f, concords = NULL, max_print_line = 79, Cstyle = FALSE)"},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Patch a LaTeX log file. — patchLog","text":"f filename log file. newname filename write patched file . concords Concordances read .dvi .pdf.  NULL, attempt made read source. max_print_line line length latex compiler wrap error messages. Cstyle TRUE, look C-style error messages \"filename:num: msg\". FALSE, look classic messages \"! msg\".  NA, look , pick popular style.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchLog.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Patch a LaTeX log file. — patchLog","text":"parsing based log parser written  Jonathan Kew, Stefan Löffler, Antonio Macrì, Henrik Skov Midtiby  TeXWorks.  parser assumes error lines reported standard format; C style errors currently supported.  patchLog can detect C style errors, standard format assumed default, preferred.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchLog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Patch a LaTeX log file. — patchLog","text":"function called mainly side effect writing new log file.  returns concords object invisibly.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/patchLog.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Patch a LaTeX log file. — patchLog","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/patchDVI/reference/readDVI.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo function to read a .dvi file — readDVI","title":"Demo function to read a .dvi file — readDVI","text":"R function reads .dvi file (prototype DVIspecials).  Modify see parts .dvi.","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/readDVI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo function to read a .dvi file — readDVI","text":"","code":"readDVI(f, show=c(\"bop\", \"special\", \"fntdef\", \"preamble\"))"},{"path":"https://dmurdoch.github.io/patchDVI/reference/readDVI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Demo function to read a .dvi file — readDVI","text":"f filename show type records print","code":""},{"path":"https://dmurdoch.github.io/patchDVI/reference/readDVI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Demo function to read a .dvi file — readDVI","text":"readDVI prints reads, return anything useful.","code":""}]
